###Correlation###

library(ggplot2) 
library(dplyr) 
library(broom) 
library(ggpubr)
library(tidyverse)
library(AICcmodavg)

#import data in .csv, make sure of headers

hist(data$variable) # for distribution of normality

plot(variable.y ~ variable.x, data =dataset) # for linearity

###mulitple regression### 
cor(data$variable1, data$variable2) # for independence of observations

#create linear model from data 
title.lm <- lm(variable.y ~ variable.x, data = dataset) summary(title.lm) # for reportable stats

#check of homoscedasticity 
par(mfrow=c(2,2)) # make plots easier to view 
plot(title.lm)

#plotting
title.data.graph <- ggplot(data, aes(x=x variable, y=y variable)) + geom_point() 
title.data.graph <- title.data.graph + geom_smooth(method="lm", col="red")

title.data.graph <- title.data.graph + stat_regline_equation(label.x = number, label.y = number)

income.graph + theme_bw() + labs(title = "Graph Title", x = "x axis label", y = "y axis label")

title.data.graph



###Independent Sample T Test###
t.test(y ~ x, var.equal=TRUE, data=dataset)




###ANOVA###
one.way <- aov(SRT ~ Group, data = ttest1)

two.way <- aov(SRT ~ Group + Age, data = ttest1)
interaction <- aov(SRT ~ Group*Age, data=ttest1)
summary(interaction)

##adding another variable: variable.3.name <- aov(variable.y ~ variable.x + variably.2 + variable.3, data = data)
#summary(blocking)

model.set <- list(one.way, two.way, interaction)
model.names <- c("one.way", "two.way", "interaction")
aictab(model.set, modnames = model.names)

par(mfrow=c(2,2))
plot(two.way)

mean.y.variable.data <- .data %>%
     group_by(variable.x, variable.z) %>%
     summarize(
         y.variable = mean(y)
     )

mean.y.data$group <- c("a","b","c","n")

mean.y.data

two.way.plot <- ggplot(data, aes(x = x.variable, y = y.variable, group=z.variable)) +
  geom_point(cex = 1.5, pch = 1.0,position = position_jitter(w = 0.1, h = 0))

two.way.plot

two.way.plot <- two.way.plot +
  stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2) +
  stat_summary(fun.data = 'mean_se', geom = 'pointrange') +
  geom_point(data=mean.y.variable.data, aes(x=x.variable, y=y.variable))

two.way.plot
